import { addKeyword, EVENTS } from "@builderbot/bot";

const administrador = addKeyword("adminirma")
.addAnswer(`Este es el panel de administrador, que desea hacer? üëáüèª`)
.addAnswer(
    [
        '*a.* Agregar a la blacklist\n*b.* Eliminar de la blacklist',
    ].join('\n'),
    { capture: true },
    async (ctx, { gotoFlow, fallBack }) => {
        if (!["a","b","A","B"].includes(ctx.body)) {
            return fallBack('Respuesta no v√°lida, por favor selecciona una de las opciones.');
        }
        switch(ctx.body){
            case "a":
                return gotoFlow(agregarbl);
                case "A":
                    return gotoFlow(agregarbl);
            case "b":
                return gotoFlow(eliminarbl);
                case "B":
                    return gotoFlow(eliminarbl);
        }
    },
);

const agregarbl = addKeyword(EVENTS.ACTION)
.addAnswer(
  `Ind√≠queme el n√∫mero de tel√©fono de la persona`,
  { capture: true } // Habilita la captura de respuestas
)
.addAction(async (ctx, { blacklist, flowDynamic }) => { // Agregar async aqu√≠
    try {
    // Agregar el n√∫mero limpio a la blacklist
    blacklist.add(ctx.body.replace(/\D/g, ""));
    console.log(`${ctx.body.replace(/\D/g, "")} a√±adido a la blacklist.`);

    // Enviar un mensaje confirmando que el n√∫mero se a√±adi√≥ a la blacklist
    await flowDynamic(`${ctx.body.replace(/\D/g, "")} ha sido a√±adido a la blacklist.`); // Usar await
} catch (error) {
    console.error(`Error al agregar a la blacklist:`, error);
    await flowDynamic(`Hubo un error al agregar el n√∫mero a la blacklist. Por favor, intente nuevamente.`);
}
});


const eliminarbl = addKeyword(EVENTS.ACTION)
.addAnswer(
  `Ind√≠queme el n√∫mero de tel√©fono de la persona`,
  { capture: true } // Habilita la captura de respuestas
)
.addAction(async (ctx, { blacklist, flowDynamic }) => { // A√±adir async aqu√≠
  try {
    // Eliminar el n√∫mero limpio de la blacklist
    blacklist.remove(ctx.body.replace(/\D/g, ""));
    console.log(`${ctx.body.replace(/\D/g, "")} removido de la blacklist.`);

    // Enviar un mensaje confirmando que el n√∫mero fue removido
    await flowDynamic(`${ctx.body.replace(/\D/g, "")} ha sido removido de la blacklist.`); // Usar await
  } catch (err) {
    console.error(`Error al eliminar de la blacklist: ${err.message}`);
  }
});

export {administrador, agregarbl, eliminarbl}